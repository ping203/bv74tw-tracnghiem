@{
    Layout = null;
}
@model List<MVC_CMS.Models.TN_ExamUserAnswer>
<!DOCTYPE html">
<html>
<head runat="server">
    <title>Bộ y tế - Bệnh viện 74 TW </title>
    <link href="@Url.Content("~/Content/bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/test.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Content/jquery-1.11.2.min.js")" type="text/javascript"></script>
</head>
<body>
    <div class="wrapper-test">
        <h2>@ViewBag.ExamTitle</h2>
        <div id="TestWrapper">
            <div id="TestLeft">
                <div id="Oclock">
                    <div id="time" rel="@ViewBag.Time" class="fl h120" style="width: 207px; background: url('/Content/Images/time.png') no-repeat top left;">
                        <div class="fl fz18 lh110 w50 pdl25" align="center" id="hourLeft">
                        </div>
                        <div class="fl fz18 lh110 w50" align="center" id="minLeft">
                        </div>
                        <div class="fl fz18 lh110 w50" align="center" id="secLeft">
                        </div>
                    </div>
                    <div class="nop-bai">
                        <a href="javascript:void(0)" onclick="if(confirm ('Bạn có chắc chắn muốn nộp bài?')){ nopBai(true);} return false;">
                            Nộp bài</a>
                    </div>
                    <div id="ListQuestion" class="fl">
                        <ul>
                            @for (int i = 0; i < Model.Count; i++)
                            {
                                <li><a href="#" data-id="@Model[i].ID" id="left-item-@(Model[i].ID)">Câu @(i + 1)</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
            <div id="TestRight">
                @{
                    string[] getAnswer = { "A", "B", "C", "D", "E", "F", "G", "H" };
                    for (int i = 0; i < Model.Count; i++)
                    {
                    <div id="Question@(Model[i].ID)">
                        <b>Câu @(i + 1): @Html.Raw(Model[i].TN_Question.Content)</b>
                        <br />
                        @{
                                 var listAnswer = Model[i].TN_Question.TN_Answer.ToList();
                                 for (int j = 0; j < listAnswer.Count; j++)
                                 {
                                     string isCheck = (Model[i].AnswerID.HasValue && Model[i].AnswerID == listAnswer[j].ID) ? "checked=\"checked\"" : "";
                            <p>
                                <label>
                                    <input type="checkbox" name="Question@(Model[i].ID)" @isCheck data-id="@listAnswer[j].ID" data-tnExamUserAnswerID = "@Model[i].ID" />
                                    @(getAnswer[j]). @listAnswer[j].Content
                                </label>
                            </p>
                    
                                 }
                        }
                    </div>
                    }
                }
            </div>
        </div>
        <script type="text/javascript">

    var totaltime = parseInt($('#time').attr('rel'));
    var currQuestion = 0;
    var endTest = false;

    function countDown() {
        if (endTest == true)
            return;
           
        var hour = Math.floor(totaltime / 3600);
        var sec = totaltime - (hour * 3600);
        var min = Math.floor(sec / 60);
        sec = sec - (min * 60);

        $('#hourLeft').text(hour);
        $('#minLeft').text(min);
        $('#secLeft').text(sec);

        totaltime -= 1;

        if (hour > 0 || sec > 0 || min > 0) {
            if (totaltime <= 300) {
                $("div#time").toggleClass("endtimenotice");
            }
            setTimeout('countDown()', 1000);
        }
        else {
            nopBai(false);
        }
    }

    function nopBai(isHand) {
        endTest = true;
        if (isHand === false) {
            alert("Thời gian thi của bạn đã hết! Nhấn vào kết thúc để xem kết quả.");
            location.reload(true);
        }
        $.get("@Url.Action("NopBai", "Home")")
          .done(function (data) {
            if (data==="False") {
                alert("Bạn chưa được phép nộp bài trước 2/3 thời gian.");
                location.reload(true);
            }else {
                location.href = "@Url.Action("Complete", "Home")";
            }
          });        
    }

    $(document).ready(function () {
        countDown();
        SetColorLeftMenu();
    });

    $('input[type="checkbox"]').on('change', function () {
        var that = this;
        $('input[name="' + that.name + '"]').not(that).prop('checked', false);
        var answerID = $(that).attr('data-id');
        var tnExamUserAnswerID = $(that).attr('data-tnExamUserAnswerID');
        var value = false;
        if ($(that).is(':checked')) {
            value = true;   
        }
        SetColorLeftMenu();
        $.get("@Url.Action("AnswerQuestion", "Home")", { answerID: answerID, tnExamUserAnswerID: tnExamUserAnswerID, value: value})
          .done(function (data) {
            if (data=="False") {
                location.reload(true);
            }
              //alert(data);
          });
    });

    $('#ListQuestion ul li a').click(function () {
        var $this = $(this);
        var id = $this.attr('data-id');
        var offset = $('#Question' + id).offset().top-40;
        $("html, body").animate({ scrollTop: offset }, 500);
    });

    function SetColorLeftMenu() {
        $(".active-menu").removeClass("active-menu");
        $("input:checked").each(function() {
              var id = $(this).attr('data-tnExamUserAnswerID');
              $("a#left-item-"+id).addClass("active-menu");
        });
    }
    function EndTimeNotice() {
        $("div#time").addClass("endtime");
    }
        </script>
    </div>
</body>
</html>
